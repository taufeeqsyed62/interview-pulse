[
    {
      "subject": "SQL",
      "question": "What is the primary purpose of the SELECT statement in SQL?",
      "options": [
        "To insert data into a table",
        "To retrieve data from a database",
        "To update existing records",
        "To delete records from a table"
      ],
      "correct": "To retrieve data from a database"
    },
    {
      "subject": "SQL",
      "question": "Which SQL clause is used to filter records in a query?",
      "options": [
        "ORDER BY",
        "GROUP BY",
        "WHERE",
        "HAVING"
      ],
      "correct": "WHERE"
    },
    {
      "subject": "SQL",
      "question": "What does the JOIN clause do in SQL?",
      "options": [
        "Combines rows from two or more tables based on a related column",
        "Sorts the result set",
        "Groups rows with similar values",
        "Filters aggregated data"
      ],
      "correct": "Combines rows from two or more tables based on a related column"
    },
    {
      "subject": "SQL",
      "question": "Which type of JOIN returns all records from both tables, with NULLs in places where there is no match?",
      "options": [
        "INNER JOIN",
        "LEFT JOIN",
        "RIGHT JOIN",
        "FULL OUTER JOIN"
      ],
      "correct": "FULL OUTER JOIN"
    },
    {
      "subject": "SQL",
      "question": "What is the purpose of the GROUP BY clause?",
      "options": [
        "To sort the result set",
        "To group rows with similar values into summary rows",
        "To filter individual rows",
        "To join multiple tables"
      ],
      "correct": "To group rows with similar values into summary rows"
    },
    {
      "subject": "SQL",
      "question": "Which SQL function is used to count the number of rows in a table?",
      "options": [
        "SUM()",
        "AVG()",
        "COUNT()",
        "MAX()"
      ],
      "correct": "COUNT()"
    },
    {
      "subject": "SQL",
      "question": "What does the HAVING clause do in SQL?",
      "options": [
        "Filters individual rows before grouping",
        "Filters grouped rows after aggregation",
        "Sorts the result set",
        "Joins tables"
      ],
      "correct": "Filters grouped rows after aggregation"
    },
    {
      "subject": "SQL",
      "question": "Which keyword is used to sort the result set in ascending order?",
      "options": [
        "ASC",
        "DESC",
        "SORT",
        "ORDER"
      ],
      "correct": "ASC"
    },
    {
      "subject": "SQL",
      "question": "What is a primary key in SQL?",
      "options": [
        "A column that allows duplicate values",
        "A unique identifier for each row in a table",
        "A column that can contain NULL values",
        "A column used for sorting"
      ],
      "correct": "A unique identifier for each row in a table"
    },
    {
      "subject": "SQL",
      "question": "What does the INSERT INTO statement do?",
      "options": [
        "Deletes records from a table",
        "Updates existing records",
        "Adds new records to a table",
        "Retrieves data from a table"
      ],
      "correct": "Adds new records to a table"
    },
    {
      "subject": "SQL",
      "question": "Which SQL statement is used to modify existing records in a table?",
      "options": [
        "SELECT",
        "UPDATE",
        "DELETE",
        "INSERT"
      ],
      "correct": "UPDATE"
    },
    {
      "subject": "SQL",
      "question": "What is the purpose of the DELETE statement in SQL?",
      "options": [
        "To retrieve data",
        "To remove records from a table",
        "To update records",
        "To create a new table"
      ],
      "correct": "To remove records from a table"
    },
    {
      "subject": "SQL",
      "question": "What is a foreign key in SQL?",
      "options": [
        "A column that uniquely identifies a row",
        "A column that references a primary key in another table",
        "A column that allows NULL values only",
        "A column used for sorting"
      ],
      "correct": "A column that references a primary key in another table"
    },
    {
      "subject": "SQL",
      "question": "Which SQL clause is used to limit the number of rows returned in a query?",
      "options": [
        "LIMIT",
        "WHERE",
        "GROUP BY",
        "ORDER BY"
      ],
      "correct": "LIMIT"
    },
    {
      "subject": "SQL",
      "question": "What does the DISTINCT keyword do in a SELECT query?",
      "options": [
        "Sorts the result set",
        "Returns only unique values",
        "Groups similar values",
        "Joins tables"
      ],
      "correct": "Returns only unique values"
    },
    {
      "subject": "SQL",
      "question": "Which SQL function calculates the average of a numeric column?",
      "options": [
        "SUM()",
        "AVG()",
        "COUNT()",
        "MIN()"
      ],
      "correct": "AVG()"
    },
    {
      "subject": "SQL",
      "question": "What is the purpose of the CREATE TABLE statement?",
      "options": [
        "To delete a table",
        "To modify an existing table",
        "To create a new table",
        "To retrieve data from a table"
      ],
      "correct": "To create a new table"
    },
    {
      "subject": "SQL",
      "question": "Which SQL keyword is used to combine multiple conditions in a WHERE clause?",
      "options": [
        "AND",
        "JOIN",
        "GROUP",
        "SORT"
      ],
      "correct": "AND"
    },
    {
      "subject": "SQL",
      "question": "What does the LIKE operator do in SQL?",
      "options": [
        "Compares exact matches",
        "Searches for a pattern in a column",
        "Joins tables",
        "Groups rows"
      ],
      "correct": "Searches for a pattern in a column"
    },
    {
      "subject": "SQL",
      "question": "Which SQL function returns the largest value in a column?",
      "options": [
        "MAX()",
        "MIN()",
        "AVG()",
        "SUM()"
      ],
      "correct": "MAX()"
    },
    {
      "subject": "SQL",
      "question": "What is the purpose of the ALTER TABLE statement?",
      "options": [
        "To delete a table",
        "To modify the structure of an existing table",
        "To create a new table",
        "To retrieve data"
      ],
      "correct": "To modify the structure of an existing table"
    },
    {
      "subject": "SQL",
      "question": "Which SQL keyword is used to handle NULL values in a query?",
      "options": [
        "IS NULL",
        "NOT NULL",
        "NULL CHECK",
        "EMPTY"
      ],
      "correct": "IS NULL"
    },
    {
      "subject": "SQL",
      "question": "What does the UNION operator do in SQL?",
      "options": [
        "Combines the results of two or more SELECT statements",
        "Joins tables based on a related column",
        "Groups rows with similar values",
        "Filters aggregated data"
      ],
      "correct": "Combines the results of two or more SELECT statements"
    },
    {
      "subject": "SQL",
      "question": "Which SQL statement is used to remove a table from a database?",
      "options": [
        "DELETE TABLE",
        "DROP TABLE",
        "REMOVE TABLE",
        "TRUNCATE TABLE"
      ],
      "correct": "DROP TABLE"
    },
    {
      "subject": "SQL",
      "question": "What is the purpose of the IN operator in SQL?",
      "options": [
        "Checks if a value matches any value in a list",
        "Joins tables",
        "Groups rows",
        "Sorts the result set"
      ],
      "correct": "Checks if a value matches any value in a list"
    },
    {
        "subject": "DBMS",
        "question": "What is a DBMS?",
        "options": [
          "A software to manage hardware resources",
          "A system to manage databases",
          "A tool for network management",
          "A programming language"
        ],
        "correct": "A system to manage databases"
      },
      {
        "subject": "DBMS",
        "question": "Which of the following is a type of DBMS?",
        "options": [
          "Relational DBMS",
          "Object-Oriented Programming",
          "Procedural DBMS",
          "Functional DBMS"
        ],
        "correct": "Relational DBMS"
      },
      {
        "subject": "DBMS",
        "question": "What is normalization in DBMS?",
        "options": [
          "Organizing data to reduce redundancy",
          "Encrypting database records",
          "Sorting data in ascending order",
          "Backing up database files"
        ],
        "correct": "Organizing data to reduce redundancy"
      },
      {
        "subject": "DBMS",
        "question": "What is the purpose of a database schema?",
        "options": [
          "To store user credentials",
          "To define the structure of a database",
          "To execute SQL queries",
          "To compress database files"
        ],
        "correct": "To define the structure of a database"
      },
      {
        "subject": "DBMS",
        "question": "What is a candidate key in DBMS?",
        "options": [
          "A key that can uniquely identify a row",
          "A key used for encryption",
          "A key for sorting records",
          "A temporary key for queries"
        ],
        "correct": "A key that can uniquely identify a row"
      },
      {
        "subject": "DBMS",
        "question": "Which ACID property ensures that a transaction is fully completed or not executed at all?",
        "options": [
          "Atomicity",
          "Consistency",
          "Isolation",
          "Durability"
        ],
        "correct": "Atomicity"
      },
      {
        "subject": "DBMS",
        "question": "What is a view in DBMS?",
        "options": [
          "A physical table in the database",
          "A virtual table based on a query",
          "A backup of the database",
          "A log of database transactions"
        ],
        "correct": "A virtual table based on a query"
      },
      {
        "subject": "DBMS",
        "question": "What is the purpose of indexing in DBMS?",
        "options": [
          "To increase data redundancy",
          "To improve query performance",
          "To encrypt data",
          "To compress the database"
        ],
        "correct": "To improve query performance"
      },
      {
        "subject": "DBMS",
        "question": "Which of the following is a NoSQL database type?",
        "options": [
          "MySQL",
          "MongoDB",
          "Oracle",
          "SQL Server"
        ],
        "correct": "MongoDB"
      },
      {
        "subject": "DBMS",
        "question": "What is a composite key?",
        "options": [
          "A single column key",
          "A key combining multiple columns",
          "A key for temporary tables",
          "A key for sorting"
        ],
        "correct": "A key combining multiple columns"
      },
      {
        "subject": "DBMS",
        "question": "What does the term 'data integrity' refer to in DBMS?",
        "options": [
          "The speed of data retrieval",
          "The accuracy and consistency of data",
          "The size of the database",
          "The encryption of data"
        ],
        "correct": "The accuracy and consistency of data"
      },
      {
        "subject": "DBMS",
        "question": "What is a transaction in DBMS?",
        "options": [
          "A single SQL query",
          "A sequence of operations treated as a unit",
          "A database backup",
          "A user authentication process"
        ],
        "correct": "A sequence of operations treated as a unit"
      },
      {
        "subject": "DBMS",
        "question": "Which normal form eliminates transitive dependencies?",
        "options": [
          "First Normal Form (1NF)",
          "Second Normal Form (2NF)",
          "Third Normal Form (3NF)",
          "Boyce-Codd Normal Form (BCNF)"
        ],
        "correct": "Third Normal Form (3NF)"
      },
      {
        "subject": "DBMS",
        "question": "What is the role of a database administrator (DBA)?",
        "options": [
          "Writing application code",
          "Managing and maintaining the database",
          "Designing user interfaces",
          "Testing software"
        ],
        "correct": "Managing and maintaining the database"
      },
      {
        "subject": "DBMS",
        "question": "What is a deadlock in DBMS?",
        "options": [
          "A situation where transactions wait indefinitely for each other",
          "A failed database backup",
          "A corrupted database file",
          "A slow query execution"
        ],
        "correct": "A situation where transactions wait indefinitely for each other"
      },
      {
        "subject": "DBMS",
        "question": "What is the purpose of a trigger in DBMS?",
        "options": [
          "To execute a query",
          "To automatically perform an action when an event occurs",
          "To create a backup",
          "To encrypt data"
        ],
        "correct": "To automatically perform an action when an event occurs"
      },
      {
        "subject": "DBMS",
        "question": "Which of the following is a relational database management system?",
        "options": [
          "Cassandra",
          "PostgreSQL",
          "DynamoDB",
          "Redis"
        ],
        "correct": "PostgreSQL"
      },
      {
        "subject": "DBMS",
        "question": "What is data redundancy in DBMS?",
        "options": [
          "Storing the same data multiple times",
          "Encrypting data",
          "Compressing data",
          "Backing up data"
        ],
        "correct": "Storing the same data multiple times"
      },
      {
        "subject": "DBMS",
        "question": "What is the purpose of the ER diagram in DBMS?",
        "options": [
          "To represent the database structure visually",
          "To execute SQL queries",
          "To compress the database",
          "To encrypt data"
        ],
        "correct": "To represent the database structure visually"
      },
      {
        "subject": "DBMS",
        "question": "What is a stored procedure in DBMS?",
        "options": [
          "A temporary table",
          "A precompiled set of SQL statements",
          "A backup file",
          "A user authentication mechanism"
        ],
        "correct": "A precompiled set of SQL statements"
      },
      {
        "subject": "DBMS",
        "question": "Which of the following ensures data consistency across distributed databases?",
        "options": [
          "Normalization",
          "Two-Phase Commit",
          "Indexing",
          "Encryption"
        ],
        "correct": "Two-Phase Commit"
      },
      {
        "subject": "DBMS",
        "question": "What is a clustered index in DBMS?",
        "options": [
          "An index that reorders the physical storage of data",
          "An index that allows duplicate values",
          "An index used for temporary tables",
          "An index for sorting"
        ],
        "correct": "An index that reorders the physical storage of data"
      },
      {
        "subject": "DBMS",
        "question": "What is the purpose of a backup in DBMS?",
        "options": [
          "To improve query performance",
          "To recover data in case of failure",
          "To encrypt data",
          "To sort data"
        ],
        "correct": "To recover data in case of failure"
      },
      {
        "subject": "DBMS",
        "question": "What is denormalization in DBMS?",
        "options": [
          "Adding redundancy to improve performance",
          "Removing redundancy",
          "Encrypting data",
          "Creating indexes"
        ],
        "correct": "Adding redundancy to improve performance"
      },
      {
        "subject": "DBMS",
        "question": "What is the CAP theorem in distributed databases?",
        "options": [
          "A principle about Consistency, Availability, and Partition Tolerance",
          "A rule for database normalization",
          "A method for data encryption",
          "A technique for query optimization"
        ],
        "correct": "A principle about Consistency, Availability, and Partition Tolerance"
      },{
        "subject": "OOPS",
        "question": "What is the primary concept of Object-Oriented Programming?",
        "options": [
          "Procedural programming",
          "Objects and classes",
          "Functional programming",
          "Event-driven programming"
        ],
        "correct": "Objects and classes"
      },
      {
        "subject": "OOPS",
        "question": "What is encapsulation in OOPS?",
        "options": [
          "Hiding data and methods within a class",
          "Inheriting properties from another class",
          "Overriding methods",
          "Creating multiple instances of a class"
        ],
        "correct": "Hiding data and methods within a class"
      },
      {
        "subject": "OOPS",
        "question": "Which OOPS principle allows a subclass to inherit properties from a parent class?",
        "options": [
          "Polymorphism",
          "Inheritance",
          "Encapsulation",
          "Abstraction"
        ],
        "correct": "Inheritance"
      },
      {
        "subject": "OOPS",
        "question": "What is polymorphism in OOPS?",
        "options": [
          "The ability of objects to take multiple forms",
          "Hiding implementation details",
          "Creating private methods",
          "Reusing code"
        ],
        "correct": "The ability of objects to take multiple forms"
      },
      {
        "subject": "OOPS",
        "question": "What is abstraction in OOPS?",
        "options": [
          "Exposing only necessary details and hiding complexity",
          "Inheriting properties",
          "Overloading methods",
          "Creating multiple objects"
        ],
        "correct": "Exposing only necessary details and hiding complexity"
      },
      {
        "subject": "OOPS",
        "question": "What is a class in OOPS?",
        "options": [
          "An instance of an object",
          "A blueprint for creating objects",
          "A method for data processing",
          "A variable type"
        ],
        "correct": "A blueprint for creating objects"
      },
      {
        "subject": "OOPS",
        "question": "What is an object in OOPS?",
        "options": [
          "A function",
          "An instance of a class",
          "A data type",
          "A variable"
        ],
        "correct": "An instance of a class"
      },
      {
        "subject": "OOPS",
        "question": "What is method overriding in OOPS?",
        "options": [
          "Defining a method with the same name in a subclass",
          "Calling a method multiple times",
          "Creating a new method",
          "Hiding a method"
        ],
        "correct": "Defining a method with the same name in a subclass"
      },
      {
        "subject": "OOPS",
        "question": "What is method overloading in OOPS?",
        "options": [
          "Defining multiple methods with the same name but different parameters",
          "Calling a method repeatedly",
          "Hiding a method",
          "Inheriting a method"
        ],
        "correct": "Defining multiple methods with the same name but different parameters"
      },
      {
        "subject": "OOPS",
        "question": "What is a constructor in OOPS?",
        "options": [
          "A method to destroy objects",
          "A special method to initialize objects",
          "A method to override parent class",
          "A method to encapsulate data"
        ],
        "correct": "A special method to initialize objects"
      },
      {
        "subject": "OOPS",
        "question": "What is the purpose of the 'this' keyword in OOPS?",
        "options": [
          "To refer to the current object",
          "To create a new object",
          "To call a static method",
          "To inherit a class"
        ],
        "correct": "To refer to the current object"
      },
      {
        "subject": "OOPS",
        "question": "What is a static method in OOPS?",
        "options": [
          "A method that belongs to the class rather than an instance",
          "A method that cannot be overridden",
          "A method that is private",
          "A method that is abstract"
        ],
        "correct": "A method that belongs to the class rather than an instance"
      },
      {
        "subject": "OOPS",
        "question": "What is an interface in OOPS?",
        "options": [
          "A class with private methods",
          "A contract for classes to implement methods",
          "A method to create objects",
          "A type of constructor"
        ],
        "correct": "A contract for classes to implement methods"
      },
      {
        "subject": "OOPS",
        "question": "What is the difference between a class and an object?",
        "options": [
          "A class is an instance, and an object is a blueprint",
          "A class is a blueprint, and an object is an instance",
          "A class is a method, and an object is a variable",
          "A class is abstract, and an object is static"
        ],
        "correct": "A class is a blueprint, and an object is an instance"
      },
      {
        "subject": "OOPS",
        "question": "What is a destructor in OOPS?",
        "options": [
          "A method to initialize objects",
          "A method to clean up resources when an object is destroyed",
          "A method to override methods",
          "A method to encapsulate data"
        ],
        "correct": "A method to clean up resources when an object is destroyed"
      },
      {
        "subject": "OOPS",
        "question": "What is the purpose of access modifiers in OOPS?",
        "options": [
          "To control the visibility of class members",
          "To create new objects",
          "To override methods",
          "To inherit classes"
        ],
        "correct": "To control the visibility of class members"
      },
      {
        "subject": "OOPS",
        "question": "Which access modifier makes a member accessible only within the same class?",
        "options": [
          "Public",
          "Private",
          "Protected",
          "Default"
        ],
        "correct": "Private"
      },
      {
        "subject": "OOPS",
        "question": "What is multiple inheritance?",
        "options": [
          "A class inheriting from multiple parent classes",
          "A class with multiple constructors",
          "A class with multiple objects",
          "A class with multiple methods"
        ],
        "correct": "A class inheriting from multiple parent classes"
      },
      {
        "subject": "OOPS",
        "question": "What is an abstract class in OOPS?",
        "options": [
          "A class that cannot be instantiated",
          "A class with only private methods",
          "A class with no methods",
          "A class with only static methods"
        ],
        "correct": "A class that cannot be instantiated"
      },
      {
        "subject": "OOPS",
        "question": "What is the purpose of the 'super' keyword in OOPS?",
        "options": [
          "To call the parent class's methods or constructor",
          "To create a new object",
          "To make a method static",
          "To encapsulate data"
        ],
        "correct": "To call the parent class's methods or constructor"
      },
      {
        "subject": "OOPS",
        "question": "What is a final class in OOPS?",
        "options": [
          "A class that cannot be inherited",
          "A class with no methods",
          "A class with private members",
          "A class with static methods"
        ],
        "correct": "A class that cannot be inherited"
      },
      {
        "subject": "OOPS",
        "question": "What is the diamond problem in OOPS?",
        "options": [
          "A problem with multiple inheritance",
          "A problem with method overloading",
          "A problem with encapsulation",
          "A problem with abstraction"
        ],
        "correct": "A problem with multiple inheritance"
      },
      {
        "subject": "OOPS",
        "question": "What is composition in OOPS?",
        "options": [
          "A class containing an instance of another class",
          "Inheriting from multiple classes",
          "Overriding methods",
          "Creating abstract classes"
        ],
        "correct": "A class containing an instance of another class"
      },
      {
        "subject": "OOPS",
        "question": "What is the purpose of the 'instanceof' operator in OOPS?",
        "options": [
          "To check if an object is of a specific type",
          "To create a new object",
          "To call a method",
          "To encapsulate data"
        ],
        "correct": "To check if an object is of a specific type"
      },
      {
        "subject": "OOPS",
        "question": "What is the Single Responsibility Principle in OOPS?",
        "options": [
          "A class should have only one reason to change",
          "A class should inherit from multiple classes",
          "A class should have private methods",
          "A class should be abstract"
        ],
        "correct": "A class should have only one reason to change"
      },
      {
        "subject": "Python",
        "question": "What is the Single Responsibility Principle in OOPS?",
        "options": [
          "A class should have only one reason to change",
          "A class should inherit from multiple classes",
          "A class should have private methods",
          "A class should be abstract"
        ],
        "correct": "A class should have only one reason to change"
      },
      {
        "subject": "Python",
        "question": "What is encapsulation in Python?",
        "options": [
          "Hiding the internal state of an object and restricting access",
          "Inheriting methods from multiple classes",
          "Creating abstract classes",
          "Overloading operators"
        ],
        "correct": "Hiding the internal state of an object and restricting access"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a class and an object?",
        "options": [
          "A class is a blueprint, and an object is an instance of a class",
          "A class is an instance, and an object is a blueprint",
          "A class is immutable, and an object is mutable",
          "A class is a function, and an object is a variable"
        ],
        "correct": "A class is a blueprint, and an object is an instance of a class"
      },
      {
        "subject": "Python",
        "question": "What is inheritance in Python?",
        "options": [
          "A class deriving properties from another class",
          "A class hiding its methods",
          "A class creating multiple instances",
          "A class overloading operators"
        ],
        "correct": "A class deriving properties from another class"
      },
      {
        "subject": "Python",
        "question": "What is polymorphism in Python?",
        "options": [
          "The ability to take multiple forms",
          "The ability to hide data",
          "The ability to inherit from multiple classes",
          "The ability to create immutable objects"
        ],
        "correct": "The ability to take multiple forms"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a list and a tuple in Python?",
        "options": [
          "Lists are mutable, tuples are immutable",
          "Lists are immutable, tuples are mutable",
          "Lists are ordered, tuples are unordered",
          "Lists are indexed, tuples are not"
        ],
        "correct": "Lists are mutable, tuples are immutable"
      },
      {
        "subject": "Python",
        "question": "What is a Python dictionary?",
        "options": [
          "A collection of key-value pairs",
          "A collection of ordered elements",
          "A collection of unique elements",
          "A collection of immutable elements"
        ],
        "correct": "A collection of key-value pairs"
      },
      {
        "subject": "Python",
        "question": "What is the use of the 'pass' statement in Python?",
        "options": [
          "It acts as a placeholder for future code",
          "It terminates a loop",
          "It raises an exception",
          "It skips the current iteration"
        ],
        "correct": "It acts as a placeholder for future code"
      },
      {
        "subject": "Python",
        "question": "What is the difference between '==' and 'is' operators?",
        "options": [
          "'==' checks value equality, 'is' checks identity",
          "'==' checks identity, 'is' checks value equality",
          "'==' checks type, 'is' checks value",
          "'==' checks reference, 'is' checks type"
        ],
        "correct": "'==' checks value equality, 'is' checks identity"
      },
      {
        "subject": "Python",
        "question": "What are Python's built-in data types?",
        "options": [
          "int, float, str, list, tuple, dict, set",
          "int, char, string, array",
          "number, string, boolean",
          "int, double, char, list"
        ],
        "correct": "int, float, str, list, tuple, dict, set"
      },
      {
        "subject": "Python",
        "question": "What is a lambda function in Python?",
        "options": [
          "An anonymous function defined with lambda",
          "A recursive function",
          "A function with default arguments",
          "A function that returns None"
        ],
        "correct": "An anonymous function defined with lambda"
      },
      {
        "subject": "Python",
        "question": "What is the difference between *args and **kwargs?",
        "options": [
          "*args is for positional arguments, **kwargs is for keyword arguments",
          "*args is for keyword arguments, **kwargs is for positional arguments",
          "*args is for lists, **kwargs is for dictionaries",
          "*args is for tuples, **kwargs is for sets"
        ],
        "correct": "*args is for positional arguments, **kwargs is for keyword arguments"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 'return' statement?",
        "options": [
          "To return a value from a function",
          "To terminate a loop",
          "To skip an iteration",
          "To raise an exception"
        ],
        "correct": "To return a value from a function"
      },
      {
        "subject": "Python",
        "question": "What is a decorator in Python?",
        "options": [
          "A function that modifies another function",
          "A function that calls itself",
          "A function with default arguments",
          "A function that returns None"
        ],
        "correct": "A function that modifies another function"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a function and a method?",
        "options": [
          "A method is a function defined inside a class",
          "A function is a method defined outside a class",
          "A method is immutable, a function is mutable",
          "A function is recursive, a method is not"
        ],
        "correct": "A method is a function defined inside a class"
      },
      {
        "subject": "Python",
        "question": "What is a set in Python?",
        "options": [
          "An unordered collection of unique elements",
          "An ordered collection of elements",
          "A collection of key-value pairs",
          "A collection of immutable elements"
        ],
        "correct": "An unordered collection of unique elements"
      },
      {
        "subject": "Python",
        "question": "How do you remove duplicates from a list?",
        "options": [
          "Convert the list to a set and back to a list",
          "Sort the list and remove adjacent duplicates",
          "Use a loop to remove elements",
          "Use the pop() method"
        ],
        "correct": "Convert the list to a set and back to a list"
      },
      {
        "subject": "Python",
        "question": "What is a list comprehension in Python?",
        "options": [
          "A concise way to create lists",
          "A way to sort lists",
          "A way to copy lists",
          "A way to reverse lists"
        ],
        "correct": "A concise way to create lists"
      },
      {
        "subject": "Python",
        "question": "What is the difference between append() and extend() in Python lists?",
        "options": [
          "append() adds an element, extend() adds multiple elements",
          "append() adds multiple elements, extend() adds one element",
          "append() modifies the list, extend() creates a new list",
          "append() removes elements, extend() adds elements"
        ],
        "correct": "append() adds an element, extend() adds multiple elements"
      },
      {
        "subject": "Python",
        "question": "What is a queue in Python?",
        "options": [
          "A FIFO data structure",
          "A LIFO data structure",
          "A key-value pair structure",
          "A sorted data structure"
        ],
        "correct": "A FIFO data structure"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of try-except in Python?",
        "options": [
          "To handle exceptions and prevent crashes",
          "To define functions",
          "To create loops",
          "To import modules"
        ],
        "correct": "To handle exceptions and prevent crashes"
      },
      {
        "subject": "Python",
        "question": "What is the 'finally' block used for?",
        "options": [
          "To execute code regardless of an exception",
          "To raise an exception",
          "To skip an exception",
          "To terminate a program"
        ],
        "correct": "To execute code regardless of an exception"
      },
      {
        "subject": "Python",
        "question": "What is the 'raise' keyword used for?",
        "options": [
          "To manually raise an exception",
          "To return a value",
          "To skip an iteration",
          "To terminate a loop"
        ],
        "correct": "To manually raise an exception"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'except' and 'except Exception'?",
        "options": [
          "'except' catches all exceptions, 'except Exception' catches specific ones",
          "'except' catches specific exceptions, 'except Exception' catches all",
          "'except' is for syntax errors, 'except Exception' is for runtime errors",
          "'except' is for runtime errors, 'except Exception' is for syntax errors"
        ],
        "correct": "'except' catches all exceptions, 'except Exception' catches specific ones"
      },
      {
        "subject": "Python",
        "question": "What is a custom exception in Python?",
        "options": [
          "An exception defined by the user",
          "An exception built into Python",
          "An exception for syntax errors",
          "An exception for file operations"
        ],
        "correct": "An exception defined by the user"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 'import' statement?",
        "options": [
          "To include external modules or libraries",
          "To define a function",
          "To create a loop",
          "To handle exceptions"
        ],
        "correct": "To include external modules or libraries"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'import module' and 'from module import *'?",
        "options": [
          "'from module import *' imports all names, 'import module' imports the module",
          "'import module' imports all names, 'from module import *' imports the module",
          "'from module import *' is more efficient",
          "'import module' is less efficient"
        ],
        "correct": "'from module import *' imports all names, 'import module' imports the module"
      },
      {
        "subject": "Python",
        "question": "What is a Python package?",
        "options": [
          "A directory with a __init__.py file",
          "A single Python file",
          "A compiled Python file",
          "A Python function"
        ],
        "correct": "A directory with a __init__.py file"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the __init__.py file?",
        "options": [
          "To mark a directory as a Python package",
          "To define a function",
          "To handle exceptions",
          "To create a loop"
        ],
        "correct": "To mark a directory as a Python package"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a module and a package?",
        "options": [
          "A module is a single file, a package is a directory of modules",
          "A module is a directory, a package is a single file",
          "A module is immutable, a package is mutable",
          "A module is a function, a package is a class"
        ],
        "correct": "A module is a single file, a package is a directory of modules"
      },
      {
        "subject": "Python",
        "question": "How do you open a file in Python?",
        "options": [
          "Using the open() function",
          "Using the read() function",
          "Using the write() function",
          "Using the close() function"
        ],
        "correct": "Using the open() function"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'r' and 'w' modes in file handling?",
        "options": [
          "'r' is for reading, 'w' is for writing",
          "'r' is for writing, 'w' is for reading",
          "'r' is for appending, 'w' is for reading",
          "'r' is for reading, 'w' is for appending"
        ],
        "correct": "'r' is for reading, 'w' is for writing"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 'with' statement in file handling?",
        "options": [
          "To automatically close the file",
          "To read the file",
          "To write to the file",
          "To append to the file"
        ],
        "correct": "To automatically close the file"
      },
      {
        "subject": "Python",
        "question": "How do you read a file line by line in Python?",
        "options": [
          "Using a for loop with the file object",
          "Using the read() method",
          "Using the write() method",
          "Using the close() method"
        ],
        "correct": "Using a for loop with the file object"
      },
      {
        "subject": "Python",
        "question": "What is the difference between read() and readline()?",
        "options": [
          "read() reads the entire file, readline() reads one line",
          "read() reads one line, readline() reads the entire file",
          "read() reads binary data, readline() reads text",
          "read() reads text, readline() reads binary data"
        ],
        "correct": "read() reads the entire file, readline() reads one line"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 're' module in Python?",
        "options": [
          "To work with regular expressions",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To work with regular expressions"
      },
      {
        "subject": "Python",
        "question": "What is the difference between shallow copy and deep copy?",
        "options": [
          "Shallow copy copies references, deep copy copies values",
          "Shallow copy copies values, deep copy copies references",
          "Shallow copy is immutable, deep copy is mutable",
          "Shallow copy is faster, deep copy is slower"
        ],
        "correct": "Shallow copy copies references, deep copy copies values"
      },
      {
        "subject": "Python",
        "question": "What is the 'global' keyword used for?",
        "options": [
          "To modify a variable outside the current scope",
          "To define a function",
          "To handle exceptions",
          "To create a loop"
        ],
        "correct": "To modify a variable outside the current scope"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'range()' and 'xrange()' in Python 2?",
        "options": [
          "range() returns a list, xrange() returns an iterator",
          "range() returns an iterator, xrange() returns a list",
          "range() is immutable, xrange() is mutable",
          "range() is faster, xrange() is slower"
        ],
        "correct": "range() returns a list, xrange() returns an iterator"
      },
      {
        "subject": "Python",
        "question": "What is a generator in Python?",
        "options": [
          "A function that yields values one at a time",
          "A function that returns multiple values",
          "A function that calls itself",
          "A function with default arguments"
        ],
        "correct": "A function that yields values one at a time"
      },
      {
        "subject": "Python",
        "question": "What is the 'yield' keyword used for?",
        "options": [
          "To produce a value from a generator",
          "To terminate a loop",
          "To raise an exception",
          "To skip an iteration"
        ],
        "correct": "To produce a value from a generator"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a list and a set in Python?",
        "options": [
          "Lists allow duplicates, sets do not",
          "Lists are unordered, sets are ordered",
          "Lists are immutable, sets are mutable",
          "Lists are faster, sets are slower"
        ],
        "correct": "Lists allow duplicates, sets do not"
      },
      {
        "subject": "Python",
        "question": "What is the 'map()' function used for?",
        "options": [
          "To apply a function to each item in an iterable",
          "To filter elements in an iterable",
          "To reduce an iterable to a single value",
          "To sort an iterable"
        ],
        "correct": "To apply a function to each item in an iterable"
      },
      {
        "subject": "Python",
        "question": "What is the 'filter()' function used for?",
        "options": [
          "To select elements from an iterable based on a condition",
          "To apply a function to each item",
          "To reduce an iterable to a single value",
          "To sort an iterable"
        ],
        "correct": "To select elements from an iterable based on a condition"
      },
      {
        "subject": "Python",
        "question": "What is the 'reduce()' function in Python?",
        "options": [
          "A function that applies a function to reduce an iterable to a single value",
          "A function that filters elements",
          "A function that maps elements",
          "A function that sorts elements"
        ],
        "correct": "A function that applies a function to reduce an iterable to a single value"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'break' and 'continue' in a loop?",
        "options": [
          "break terminates the loop, continue skips the current iteration",
          "break skips the current iteration, continue terminates the loop",
          "break raises an exception, continue skips the loop",
          "break terminates the program, continue skips the loop"
        ],
        "correct": "break terminates the loop, continue skips the current iteration"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 'else' clause in a loop?",
        "options": [
          "To execute code if the loop completes without a break",
          "To handle exceptions",
          "To skip an iteration",
          "To terminate the loop"
        ],
        "correct": "To execute code if the loop completes without a break"
      },
      {
        "subject": "Python",
        "question": "What is the 'zip()' function used for?",
        "options": [
          "To combine multiple iterables into tuples",
          "To unzip a file",
          "To sort an iterable",
          "To filter an iterable"
        ],
        "correct": "To combine multiple iterables into tuples"
      },
      {
        "subject": "Python",
        "question": "What is the difference between Python 2 and Python 3?",
        "options": [
          "Python 3 has print as a function, Python 2 has it as a statement",
          "Python 2 has print as a function, Python 3 has it as a statement",
          "Python 3 is slower than Python 2",
          "Python 2 supports Unicode, Python 3 does not"
        ],
        "correct": "Python 3 has print as a function, Python 2 has it as a statement"
      },
      {
        "subject": "Python",
        "question": "What is the 'self' keyword in Python?",
        "options": [
          "A reference to the instance of a class",
          "A reference to a function",
          "A reference to a module",
          "A reference to a variable"
        ],
        "correct": "A reference to the instance of a class"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the '__init__' method?",
        "options": [
          "To initialize an object's attributes",
          "To delete an object",
          "To copy an object",
          "To compare objects"
        ],
        "correct": "To initialize an object's attributes"
      },
      {
        "subject": "Python",
        "question": "What is the difference between 'public' and 'private' attributes?",
        "options": [
          "Private attributes are prefixed with '__', public are not",
          "Public attributes are prefixed with '__', private are not",
          "Private attributes are immutable, public are mutable",
          "Public attributes are faster, private are slower"
        ],
        "correct": "Private attributes are prefixed with '__', public are not"
      },
      {
        "subject": "Python",
        "question": "What is the 'super()' function used for?",
        "options": [
          "To call a parent class's method",
          "To create a new class",
          "To delete a class",
          "To copy a class"
        ],
        "correct": "To call a parent class's method"
      },
      {
        "subject": "Python",
        "question": "What is a static method in Python?",
        "options": [
          "A method that doesn't require an instance",
          "A method that requires an instance",
          "A method that is immutable",
          "A method that is recursive"
        ],
        "correct": "A method that doesn't require an instance"
      },
      {
        "subject": "Python",
        "question": "What is a class method in Python?",
        "options": [
          "A method that takes the class as its first argument",
          "A method that takes an instance as its first argument",
          "A method that is immutable",
          "A method that is recursive"
        ],
        "correct": "A method that takes the class as its first argument"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the '@property' decorator?",
        "options": [
          "To create getter and setter methods",
          "To define a static method",
          "To define a class method",
          "To define a recursive method"
        ],
        "correct": "To create getter and setter methods"
      },
      {
        "subject": "Python",
        "question": "What is the difference between mutable and immutable objects?",
        "options": [
          "Mutable objects can be changed, immutable cannot",
          "Immutable objects can be changed, mutable cannot",
          "Mutable objects are faster, immutable are slower",
          "Immutable objects are ordered, mutable are not"
        ],
        "correct": "Mutable objects can be changed, immutable cannot"
      },
      {
        "subject": "Python",
        "question": "What is the 'collections' module used for?",
        "options": [
          "To provide specialized container datatypes",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To provide specialized container datatypes"
      },
      {
        "subject": "Python",
        "question": "What is the 'itertools' module used for?",
        "options": [
          "To provide tools for working with iterators",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To provide tools for working with iterators"
      },
      {
        "subject": "Python",
        "question": "What is the 'functools' module used for?",
        "options": [
          "To provide tools for working with functions",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To provide tools for working with functions"
      },
      {
        "subject": "Python",
        "question": "What is the difference between a stack and a queue?",
        "options": [
          "Stack is LIFO, queue is FIFO",
          "Stack is FIFO, queue is LIFO",
          "Stack is mutable, queue is immutable",
          "Stack is ordered, queue is unordered"
        ],
        "correct": "Stack is LIFO, queue is FIFO"
      },
      {
        "subject": "Python",
        "question": "What is the purpose of the 'os' module?",
        "options": [
          "To interact with the operating system",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To interact with the operating system"
      },{
        "subject": "Python",
        "question": "What is the purpose of the 'sys' module?",
        "options": [
          "To provide system-specific parameters and functions",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To provide system-specific parameters and functions"
      },
      {
        "subject": "Python",
        "question": "What is the 'datetime' module used for?",
        "options": [
          "To work with dates and times",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To work with dates and times"
      },
      {
        "subject": "Python",
        "question": "What is the 'json' module used for?",
        "options": [
          "To work with JSON data",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To work with JSON data"
      },
      {
        "subject": "Python",
        "question": "What is the 'pickle' module used for?",
        "options": [
          "To serialize and deserialize Python objects",
          "To handle file operations",
          "To manage exceptions",
          "To create loops"
        ],
        "correct": "To serialize and deserialize Python objects"
      },  {
        "subject": "SQL CODES",
        "question": "Which SQL query will retrieve all records from the 'employees' table?",
        "options": [
          "SELECT * FROM employees;",
          "GET ALL FROM employees;",
          "FETCH ALL ROWS employees;",
          "SHOW * FROM employees;"
        ],
        "correct": "SELECT * FROM employees;"
      },
      {
        "subject": "SQL CODES",
        "question": "Which SQL command is used to remove a table permanently from the database?",
        "options": [
          "DELETE TABLE employees;",
          "REMOVE TABLE employees;",
          "DROP TABLE employees;",
          "ERASE TABLE employees;"
        ],
        "correct": "DROP TABLE employees;"
      },
      {
        "subject": "SQL CODES",
        "question": "How do you select only the 'name' and 'age' columns from a table called 'students'?",
        "options": [
          "SELECT name, age FROM students;",
          "CHOOSE name, age FROM students;",
          "SELECT name AND age FROM students;",
          "GET name, age OF students;"
        ],
        "correct": "SELECT name, age FROM students;"
      },
      {
        "subject": "SQL CODES",
        "question": "Which SQL query is used to insert a new record into the 'customers' table?",
        "options": [
          "ADD INTO customers VALUES ('John', 'Doe');",
          "INSERT INTO customers VALUES ('John', 'Doe');",
          "PUT INTO customers ('John', 'Doe');",
          "APPEND INTO customers VALUES ('John', 'Doe');"
        ],
        "correct": "INSERT INTO customers VALUES ('John', 'Doe');"
      },
      {
        "subject": "SQL CODES",
        "question": "Which SQL statement will return only unique job titles from the 'employees' table?",
        "options": [
          "SELECT UNIQUE job_title FROM employees;",
          "SELECT ALL job_title FROM employees;",
          "SELECT DISTINCT job_title FROM employees;",
          "SELECT job_title DISTINCT FROM employees;"
        ],
        "correct": "SELECT DISTINCT job_title FROM employees;"
      },
      {
        "subject": "SQL CODES",
        "question": "What is the correct SQL query to update the salary of an employee with id 5?",
        "options": [
          "UPDATE employees SET salary = 50000 WHERE id = 5;",
          "MODIFY employees SET salary = 50000 WHERE id = 5;",
          "CHANGE employees.salary = 50000 WHERE id = 5;",
          "SET salary = 50000 IN employees WHERE id = 5;"
        ],
        "correct": "UPDATE employees SET salary = 50000 WHERE id = 5;"
      },
      {
        "subject": "SQL CODES",
        "question": "Which SQL command is used to remove duplicate rows from a result set?",
        "options": [
          "SELECT REMOVE DUPLICATES * FROM table;",
          "SELECT * FROM table GROUP BY *;",
          "SELECT DISTINCT * FROM table;",
          "SELECT * FROM table UNIQUE;"
        ],
        "correct": "SELECT DISTINCT * FROM table;"
      },
      {
        "subject": "SQL CODES",
        "question": "How do you count the total number of records in a 'sales' table?",
        "options": [
          "SELECT TOTAL FROM sales;",
          "SELECT COUNT(*) FROM sales;",
          "SELECT SUM(*) FROM sales;",
          "SELECT RECORDS FROM sales;"
        ],
        "correct": "SELECT COUNT(*) FROM sales;"
      },
      {
        "subject": "SQL CODES",
        "question": "What SQL clause is used to filter the records returned by a SELECT statement?",
        "options": [
          "ORDER BY",
          "FILTER BY",
          "GROUP BY",
          "WHERE"
        ],
        "correct": "WHERE"
      },
      {
        "subject": "SQL CODES",
        "question": "Which SQL query returns the highest salary from 'employees' table?",
        "options": [
          "SELECT MAX(salary) FROM employees;",
          "SELECT TOP salary FROM employees;",
          "SELECT salary FROM employees ORDER BY salary DESC;",
          "SELECT HIGHEST(salary) FROM employees;"
        ],
        "correct": "SELECT MAX(salary) FROM employees;"
      },{
        "subject": "SQL CODES",
        "question": "How do you rename a table from 'old_table' to 'new_table'?",
        "options": [
            "MODIFY TABLE old_table TO new_table;",
            "RENAME old_table AS new_table;",
            "RENAME TABLE old_table TO new_table;",
            "CHANGE old_table TO new_table;"
        ],
        "correct": "RENAME TABLE old_table TO new_table;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL clause is used to sort the result-set by a specific column?",
        "options": [
            "GROUP BY",
            "ORDER BY",
            "SORT BY",
            "FILTER BY"
        ],
        "correct": "ORDER BY"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL function returns the number of rows that matches a specified criterion?",
        "options": [
            "COUNT()",
            "SUM()",
            "MAX()",
            "AVG()"
        ],
        "correct": "COUNT()"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you find the average salary in the 'employees' table?",
        "options": [
            "SELECT AVG(salary) FROM employees;",
            "SELECT MEAN(salary) FROM employees;",
            "SELECT AVERAGE(salary) FROM employees;",
            "SELECT MID(salary) FROM employees;"
        ],
        "correct": "SELECT AVG(salary) FROM employees;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL clause is used with aggregate functions to group the result-set?",
        "options": [
            "GROUP BY",
            "ORDER BY",
            "WHERE",
            "HAVING"
        ],
        "correct": "GROUP BY"
    },
    {
        "subject": "SQL CODES",
        "question": "What does the following query return? SELECT * FROM products WHERE price BETWEEN 10 AND 20;",
        "options": [
            "All products priced under 10",
            "All products priced over 20",
            "Products with price equal to 10 or 20 only",
            "All products priced between 10 and 20 inclusive"
        ],
        "correct": "All products priced between 10 and 20 inclusive"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you delete all rows from a table but keep the structure?",
        "options": [
            "DELETE * FROM table;",
            "REMOVE ALL FROM table;",
            "TRUNCATE TABLE table;",
            "DROP TABLE table;"
        ],
        "correct": "TRUNCATE TABLE table;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which keyword is used to fetch only rows that meet a condition after grouping?",
        "options": [
            "WHERE",
            "IF",
            "HAVING",
            "CHECK"
        ],
        "correct": "HAVING"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you retrieve the top 5 highest-paid employees?",
        "options": [
            "SELECT TOP 5 * FROM employees ORDER BY salary DESC;",
            "SELECT * FROM employees ORDER BY salary DESC LIMIT 5;",
            "SELECT * FROM employees LIMIT 5 ORDER BY salary DESC;",
            "SELECT FIRST 5 * FROM employees ORDER salary DESC;"
        ],
        "correct": "SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which clause is used to limit the number of rows returned?",
        "options": [
            "LIMIT",
            "TOP",
            "ROWNUM",
            "FETCH"
        ],
        "correct": "LIMIT"
    },
    {
        "subject": "SQL CODES",
        "question": "What is the result of SELECT NULL + 5;",
        "options": [
            "5",
            "NULL",
            "0",
            "Error"
        ],
        "correct": "NULL"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you change a column name in a table?",
        "options": [
            "ALTER TABLE table_name CHANGE old_name new_name;",
            "RENAME COLUMN old_name TO new_name;",
            "MODIFY TABLE table_name RENAME COLUMN old_name TO new_name;",
            "ALTER TABLE table_name RENAME COLUMN old_name TO new_name;"
        ],
        "correct": "ALTER TABLE table_name RENAME COLUMN old_name TO new_name;"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you select records where name starts with 'A'?",
        "options": [
            "SELECT * FROM users WHERE name LIKE 'A%';",
            "SELECT * FROM users WHERE name = 'A';",
            "SELECT * FROM users WHERE name = '%A';",
            "SELECT * FROM users WHERE name LIKE '%A';"
        ],
        "correct": "SELECT * FROM users WHERE name LIKE 'A%';"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you check if a column 'email' has NULL values?",
        "options": [
            "SELECT * FROM users WHERE email = NULL;",
            "SELECT * FROM users WHERE email IS NULL;",
            "SELECT * FROM users WHERE email == NULL;",
            "SELECT * FROM users WHERE email NOT EXISTS;"
        ],
        "correct": "SELECT * FROM users WHERE email IS NULL;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL statement is used to create a new table?",
        "options": [
            "NEW TABLE",
            "MAKE TABLE",
            "CREATE TABLE",
            "INSERT TABLE"
        ],
        "correct": "CREATE TABLE"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you select all rows where age is greater than 25?",
        "options": [
            "SELECT * FROM people WHERE age > 25;",
            "SELECT * FROM people WHERE age >= 25;",
            "SELECT * FROM people WHERE age != 25;",
            "SELECT * FROM people WHERE age < 25;"
        ],
        "correct": "SELECT * FROM people WHERE age > 25;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which keyword is used to avoid duplicate entries in SELECT results?",
        "options": [
            "UNIQUE",
            "ONLY",
            "DISTINCT",
            "SINGLE"
        ],
        "correct": "DISTINCT"
    },
    {
        "subject": "SQL CODES",
        "question": "How do you get the current date in SQL?",
        "options": [
            "SELECT CURRENT_DATE;",
            "SELECT NOW();",
            "SELECT GETDATE();",
            "SELECT TODAY();"
        ],
        "correct": "SELECT CURRENT_DATE;"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL function is used to calculate total sum of a column?",
        "options": [
            "TOTAL()",
            "SUM()",
            "ADD()",
            "CALC()"
        ],
        "correct": "SUM()"
    },
    {
        "subject": "SQL CODES",
        "question": "Which SQL command removes rows matching a condition?",
        "options": [
            "REMOVE FROM table WHERE condition;",
            "DELETE FROM table WHERE condition;",
            "ERASE FROM table WHERE condition;",
            "DROP FROM table WHERE condition;"
        ],
        "correct": "DELETE FROM table WHERE condition;"
    }, {
      "subject": "SQL CODES",
      "question": "How do you insert a new row into a table 'students' with name 'John' and age 20?",
      "options": [
        "INSERT INTO students VALUES ('John', 20);",
        "ADD INTO students (name, age) VALUES ('John', 20);",
        "INSERT students (name, age) VALUES ('John', 20);",
        "INSERT INTO students (John, 20);"
      ],
      "correct": "INSERT INTO students VALUES ('John', 20);"
    },
    {
      "subject": "SQL CODES",
      "question": "How do you add a new column 'email' to an existing table 'users'?",
      "options": [
        "ALTER TABLE users ADD COLUMN email VARCHAR(100);",
        "MODIFY TABLE users ADD email TEXT;",
        "INSERT COLUMN email TO users;",
        "ALTER users ADD email;"
      ],
      "correct": "ALTER TABLE users ADD COLUMN email VARCHAR(100);"
    },
    {
      "subject": "SQL CODES",
      "question": "What SQL statement is used to remove a table completely?",
      "options": [
        "DELETE TABLE table_name;",
        "REMOVE table_name;",
        "DROP TABLE table_name;",
        "TRUNCATE table_name;"
      ],
      "correct": "DROP TABLE table_name;"
    },
    {
      "subject": "SQL CODES",
      "question": "How do you update the 'salary' to 50000 where employee id is 101?",
      "options": [
        "SET salary = 50000 WHERE id = 101;",
        "UPDATE employees SET salary = 50000 WHERE id = 101;",
        "MODIFY employees SET salary = 50000 WHERE id = 101;",
        "UPDATE employees WHERE id = 101 SET salary = 50000;"
      ],
      "correct": "UPDATE employees SET salary = 50000 WHERE id = 101;"
    },
    {
      "subject": "SQL CODES",
      "question": "Which clause is used to filter rows before grouping?",
      "options": [
        "GROUP BY",
        "HAVING",
        "WHERE",
        "ORDER BY"
      ],
      "correct": "WHERE"
    },
    {
      "subject": "SQL CODES",
      "question": "How do you count distinct departments in a company table?",
      "options": [
        "SELECT COUNT(department) FROM company;",
        "SELECT COUNT(*) FROM DISTINCT company.department;",
        "SELECT COUNT(DISTINCT department) FROM company;",
        "SELECT DISTINCT COUNT(department) FROM company;"
      ],
      "correct": "SELECT COUNT(DISTINCT department) FROM company;"
    },
    {
      "subject": "SQL CODES",
      "question": "What does the query SELECT LENGTH('SQL') return?",
      "options": [
        "3",
        "4",
        "2",
        "Error"
      ],
      "correct": "3"
    },
    {
      "subject": "SQL CODES",
      "question": "How do you round a number to 2 decimal places in SQL?",
      "options": [
        "SELECT ROUND(value, 2);",
        "SELECT DECIMAL(value, 2);",
        "SELECT FORMAT(value, 2);",
        "SELECT TO_DECIMAL(value, 2);"
      ],
      "correct": "SELECT ROUND(value, 2);"
    },
    {
      "subject": "SQL CODES",
      "question": "How to select records where name ends with 'n'?",
      "options": [
        "SELECT * FROM users WHERE name LIKE '%n';",
        "SELECT * FROM users WHERE name = 'n%';",
        "SELECT * FROM users WHERE name == '%n';",
        "SELECT * FROM users WHERE name LIKE 'n%';"
      ],
      "correct": "SELECT * FROM users WHERE name LIKE '%n';"
    },
    {
      "subject": "SQL CODES",
      "question": "How to retrieve the maximum salary from employees table?",
      "options": [
        "SELECT MAX(salary) FROM employees;",
        "SELECT salary(MAX) FROM employees;",
        "SELECT MAXIMUM(salary) FROM employees;",
        "SELECT salary FROM employees WHERE salary = MAX;"
      ],
      "correct": "SELECT MAX(salary) FROM employees;"
    }
      
]